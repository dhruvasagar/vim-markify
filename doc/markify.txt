*markify*				Mark lines in |quickfix| using signs.  v1.1.1
===============================================================================
		Markify : Use Signs to Mark Errors / Warnings / Matches
				Version 1.1.1

		Author: Dhruva Sagar <http://dhruvasagar.com>
		License: MIT License <http://opensource.org/licenses/MIT/>
===============================================================================
CONTENTS						*markify-contents*

	1. Introduction ............|markify-intro|
	2. Options .................|markify-options|
	3. Mappings ................|markify-mappings|
	4. Commands ................|markify-commands|
	5. Contributing ............|markify-contributing|

===============================================================================
INTRODUCTION						*markify-intro*

Markify is a simple, lightweight plugin that marks lines in buffers using
signs to indicate quickfix or location list entries. This identifies and uses
appropriate signs for errors, warnings or other informational messages. Works
for  :make, :lmake, :grep, :lgrep, :grepadd, :lgrepadd, :vimgrep, :lvimgrep,
     :vimgrepadd, :lvimgrepadd, :cscope, :helpgrep, :lhelpgrep

===============================================================================
OPTIONS							*markify-options*

Overview :
	|markify-error-text| .............. Define text for error sign
	|markify-error-texthl| ............ Define texthl for error sign
	|markify-error-pattern| ........... Define pattern identifying an error
	|markify-warning-text| ............ Define text for error sign
	|markify-warning-texthl| .......... Define texthl for error sign
	|markify-warning-pattern| ......... Define pattern identifying a warning
	|markify-info-text| ............... Define text for error sign
	|markify-info-texthl| ............. Define texthl for error sign
	|markify-autocmd| ................. Flag for enabling autocmd
	|markify-map| ..................... Define mapping for |Markify|
	|markify-clear-map| ............... Define mapping for |MarkifyClear|
	|markify-toggle-map| .............. Define mapping for |MarkifyToggle|
	|markify-echo-current-message| .... Enable echoing of message

g:markify_error_text					*markify-error-text*
	Use this to define the text to use for error signs. >
		let g:markify_error_text = '>>'
<

g:markify_error_texthl					*markify-error-texthl*
	Use this to define the texthl to use for error signs. >
		let g:markify_error_texthl = 'Error'
<

g:markify_error_pattern					*markify-error-pattern*
	Use this to define a pattern that identifies text as an error text.
		let g:markify_error_pattern = '^ *error:'
<

g:markify_warning_text					*markify-warning-text*
	Use this to define the this to define the text to use for warning
	signs. >
		let g:markify_warning_text = 'Todo'
<

g:markify_warning_texthl				*markify-warning-texthl*
	Use this to define the texthl to use for error signs. >
		let g:markify_warning_texthl = 'Error'
<

g:markify_warning_pattern				*markify-warning-pattern*
	Use this to define a pattern that identifies text as a warning text.
		let g:markify_warning_pattern = '^ *warning:'
<

g:markify_info_text					*markify-info-text*
	Use this to define the this to define the text to use for warning
	signs. >
		let g:markify_info_text = '>>'
<

g:markify_info_texthl					*markify-info-texthl*
	Use this to define the texthl to use for error signs. >
		let g:markify_info_texthl = 'Normal'
<

g:markify_autocmd					*markify-autocmd*
	Use this to enable or disable the autocommand for markify. >
		let g:markify_autocmd = 1
<
	NOTE if you set |markify-autocmd| to 0, then you will have to
	manually call |Markify| or |MarkifyToggle| to see the signs indicating
	the lists.

g:markify_map						*markify-map*
	Use this to define mapping to invoke |Markify|. >
		let g:markify_map = '<Leader>mm'
<

g:markify_clear_map					*markify-clear-map*
	Use this to define the mapping to invoke |MarkifyClear|. >
		let g:markify_clear_map = '<Leader>mc'
<

g:markify_toggle_map					*markify-toggle-map*
	Use this to define the mapping to invoke |MarkifyToggle|. >
		let g:markify_toggle_map = '<Leader>M'
<

g:markify_echo_current_message			*markify-echo-current-message*
	Use this to enable / disable echoing of message for current line. >
		let g:markify_echo_current_message = 1
<

===============================================================================
MAPPINGS						*markify-mappings*

							*markify-<Leader>mm*
<Leader>mm	Invoke |Markify|.

							*markify-<Leader>mc*
<Leader>mc	Invoke |MarkifyClear|.

							*markify-<Leader>M*
<Leader>M	Invoke |MarkifyToggle|.

===============================================================================
COMMANDS						*markify-commands*

							*:Markify*
							*markify-:Markify*
:Markify
	Process the current location list or quickfix list (location lists
	have precedence over quickfix lists) and mark the corresponding lines
	in the corresponding buffers with appropriate signs for errors,
	warnings or info.

							*:MarkifyClear*
							*markify-:MarkifyClear*
:MarkifyClear
	Clear the signs set by |Markify|.

							*:MarkifyToggle*
							*markify-:MarkifyToggle*
:MarkifyToggle
	Toggle between |Markify| and |MarkifyClear| alternatively.

===============================================================================
CONTRIBUTING						*markify-contributing*

1. Reporting Bugs:
	Use Github Issue Tracker
	(https://github.com/dhruvasagar/vim-markify/issues) for filing bugs.

2. Contributing to Code
	If you want to take a stab at it, by all means, send me a pull request
	on Github (https://github.com/dhruvasagar/vim-markify) or get in touch
	with me directly via e-mail at dhruva [dot] sagar [at] gmail.com.

===============================================================================

 vim:tw=78 ts=8 ft=help norl
